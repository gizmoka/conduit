{
  "uid" : "9345e5f1290ff6d1",
  "name" : "test_registration",
  "fullName" : "test-conduit.test_3_registration#test_registration",
  "historyId" : "100ff5b420f5b12b88ca7318c31a5d87",
  "time" : {
    "start" : 1628509579461,
    "stop" : 1628509581486,
    "duration" : 2025
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
  "statusTrace" : "def test_registration():\n        browser_options = Options()\n        browser_options.headless = True\n        browser = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        URL = \"http://conduitapp.progmasters.hu:1667/#/\"\n        browser.get(URL)\n        browser.implicitly_wait(10)\n    \n        # Előfeltételek\n        accepting_cookies(browser)\n    \n        # TC3: Regisztráció\n        browser.find_element_by_xpath('//a[@href=\"#/register\"]').click()\n    \n        username_input = browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n    \n        # minden regisztráláskor új adatok generálása\n        dynamic_variable = str(datetime.now(timezone.utc).strftime(\"%Y%m%d%H%M%S\"))\n        dynamic_email = dynamic_variable + \"@gmail.com\"\n        username_input.send_keys(dynamic_variable)\n        email_input.send_keys(dynamic_email)\n        password_input.send_keys(\"Adminka01,\")\n        sending_data = browser.find_element_by_css_selector('button.btn.btn-lg.btn-primary.pull-xs-right')\n        sending_data.click()\n    \n        successful_registration_message = browser.find_element_by_css_selector('div.swal-text').text\n>       assert  successful_registration_message == \"Your registration was successful!\"\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\ntest-conduit/test_3_registration.py:36: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
    "statusTrace" : "def test_registration():\n        browser_options = Options()\n        browser_options.headless = True\n        browser = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        URL = \"http://conduitapp.progmasters.hu:1667/#/\"\n        browser.get(URL)\n        browser.implicitly_wait(10)\n    \n        # Előfeltételek\n        accepting_cookies(browser)\n    \n        # TC3: Regisztráció\n        browser.find_element_by_xpath('//a[@href=\"#/register\"]').click()\n    \n        username_input = browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n    \n        # minden regisztráláskor új adatok generálása\n        dynamic_variable = str(datetime.now(timezone.utc).strftime(\"%Y%m%d%H%M%S\"))\n        dynamic_email = dynamic_variable + \"@gmail.com\"\n        username_input.send_keys(dynamic_variable)\n        email_input.send_keys(dynamic_email)\n        password_input.send_keys(\"Adminka01,\")\n        sending_data = browser.find_element_by_css_selector('button.btn.btn-lg.btn-primary.pull-xs-right')\n        sending_data.click()\n    \n        successful_registration_message = browser.find_element_by_css_selector('div.swal-text').text\n>       assert  successful_registration_message == \"Your registration was successful!\"\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\ntest-conduit/test_3_registration.py:36: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6075aa8dcc24f3eb",
      "name" : "log",
      "source" : "6075aa8dcc24f3eb.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "9fb44ad844c48fd0",
      "name" : "stderr",
      "source" : "9fb44ad844c48fd0.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test-conduit"
  }, {
    "name" : "suite",
    "value" : "test_3_registration"
  }, {
    "name" : "host",
    "value" : "fv-az74-184"
  }, {
    "name" : "thread",
    "value" : "3713-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test-conduit.test_3_registration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9345e5f1290ff6d1.json",
  "parameterValues" : [ ]
}