{
  "uid" : "735afeb31ffe5814",
  "name" : "test_login",
  "fullName" : "test-conduit.test_4_login#test_login",
  "historyId" : "b300c38b62ea5a7e869df49244a057ad",
  "time" : {
    "start" : 1628607088281,
    "stop" : 1628607106512,
    "duration" : 18231
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "def test_login():\n        browser_options = Options()\n        browser_options.headless = True\n        browser = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        URL = \"http://conduitapp.progmasters.hu:1667/#/\"\n        browser.get(URL)\n        browser.implicitly_wait(10)\n    \n        # Előfeltételek\n        accepting_cookies(browser)\n        # conduit_login(browser)\n        # conduit_logout(browser)\n        # browser.refresh()\n        # accepting_cookies(browser)\n    \n        # TC4: Belépés\n        time.sleep(5)\n        sign_in_button = browser.find_element_by_xpath(\"//a[@href='#/login']\")\n        # sign_in_button = browser.find_element_by_xpath('//a[normalize-space()=\"Sign in\"]')\n        # sign_in_button = browser.find_element_by_css_selector('.nav-link.router-link-exact-active.active')\n        # sign_in_button = browser.find_element_by_xpath(\"//nav[@class=’navbar navbar-light’]/div[@class=’container’]/ul/li[1]/a\")\n        # sign_in_button = browser.find_element_by_xpath(\"//li[@class=’nav-item’][1]\")\n        sign_in_button.click()\n        email_input = browser.find_element_by_css_selector('input[placeholder=\"Email\"]')\n        password_input = browser.find_element_by_css_selector('input[placeholder=\"Password\"]')\n        email_input.send_keys(\"gumibogyo@gmail.com\")\n        password_input.send_keys(\"GumiBogyo01\")\n        login_button = browser.find_element_by_css_selector('button.btn.btn-lg.btn-primary.pull-xs-right')\n        login_button.click()\n    \n        # assert ehhez: username megjelenik-e a menubaron\n        wait = WebDriverWait(browser, 5)\n>       username_input = wait.until(EC.visibility_of_element_located((By.XPATH, '//a[normalize-space()=\"GumiBogyo\"]')))\n\ntest-conduit/test_4_login.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e8b319767b080e56fa87f2e75050909\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fde42189ee0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "def test_login():\n        browser_options = Options()\n        browser_options.headless = True\n        browser = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        URL = \"http://conduitapp.progmasters.hu:1667/#/\"\n        browser.get(URL)\n        browser.implicitly_wait(10)\n    \n        # Előfeltételek\n        accepting_cookies(browser)\n        # conduit_login(browser)\n        # conduit_logout(browser)\n        # browser.refresh()\n        # accepting_cookies(browser)\n    \n        # TC4: Belépés\n        time.sleep(5)\n        sign_in_button = browser.find_element_by_xpath(\"//a[@href='#/login']\")\n        # sign_in_button = browser.find_element_by_xpath('//a[normalize-space()=\"Sign in\"]')\n        # sign_in_button = browser.find_element_by_css_selector('.nav-link.router-link-exact-active.active')\n        # sign_in_button = browser.find_element_by_xpath(\"//nav[@class=’navbar navbar-light’]/div[@class=’container’]/ul/li[1]/a\")\n        # sign_in_button = browser.find_element_by_xpath(\"//li[@class=’nav-item’][1]\")\n        sign_in_button.click()\n        email_input = browser.find_element_by_css_selector('input[placeholder=\"Email\"]')\n        password_input = browser.find_element_by_css_selector('input[placeholder=\"Password\"]')\n        email_input.send_keys(\"gumibogyo@gmail.com\")\n        password_input.send_keys(\"GumiBogyo01\")\n        login_button = browser.find_element_by_css_selector('button.btn.btn-lg.btn-primary.pull-xs-right')\n        login_button.click()\n    \n        # assert ehhez: username megjelenik-e a menubaron\n        wait = WebDriverWait(browser, 5)\n>       username_input = wait.until(EC.visibility_of_element_located((By.XPATH, '//a[normalize-space()=\"GumiBogyo\"]')))\n\ntest-conduit/test_4_login.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e8b319767b080e56fa87f2e75050909\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fde42189ee0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "28c1b131f52f4ec8",
      "name" : "log",
      "source" : "28c1b131f52f4ec8.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "cdbc18e263004d17",
      "name" : "stderr",
      "source" : "cdbc18e263004d17.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test-conduit"
  }, {
    "name" : "suite",
    "value" : "test_4_login"
  }, {
    "name" : "host",
    "value" : "fv-az81-527"
  }, {
    "name" : "thread",
    "value" : "3836-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test-conduit.test_4_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "735afeb31ffe5814.json",
  "parameterValues" : [ ]
}